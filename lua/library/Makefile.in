# Copyright (C) 2005-2009, Parrot Foundation.
# $Id$

## arguments we want to run parrot with
PARROT_ARGS   :=

## configuration settings
VERSION       := @versiondir@
BIN_DIR       := @bindir@
LIB_DIR       := @libdir@$(VERSION)

## Setup some commands
PERL          := @perl@
CP            := @cp@
MKPATH        := @mkpath@
RM_F          := @rm_f@
RM_RF         := @rm_rf@
PARROT        := $(BIN_DIR)/parrot@exe@

GEN_PIR := \
#IF(has_opengl): gl.pir \
#IF(has_crypto): sha1.pir \

all: build

build: \
 _helpers.pbc \
 alarm.pbc \
 base64.pbc \
 bc.pbc \
 bit.pbc \
 bitlib.pbc \
 complex.pbc \
#IF(has_opengl): gl.pbc \
#IF(has_opengl): gl_binding.pbc \
#IF(has_opengl): glut.pbc \
 lfs.pbc \
 lpeg.pbc \
 markdown.pbc \
 mathx.pbc \
#IF(has_crypto): md5.pbc \
 random.pbc \
#IF(has_crypto): sha1.pbc \
 struct.pbc \
 uuid.pbc \
 zlib.pbc

_helpers.pbc: _helpers.pir
	$(PARROT) --output=_helpers.pbc _helpers.pir

alarm.pbc: alarm.pir
	-$(PARROT) --output=alarm.pbc alarm.pir

base64.pbc: base64.pir
	-$(PARROT) --output=base64.pbc base64.pir

bc.pbc: bc.pir
	-$(PARROT) --output=bc.pbc bc.pir

bit.pbc: bit.pir
	-$(PARROT) --output=bit.pbc bit.pir

bitlib.pbc: bitlib.pir
	-$(PARROT) --output=bitlib.pbc bitlib.pir

complex.pbc: complex.pir
	-$(PARROT) --output=complex.pbc complex.pir

#IF(has_opengl):gl.pir: gl.lua
#IF(has_opengl):	$(CP) gl.lua ../../gl.lua
#IF(has_opengl):	-cd ../.. && $(PARROT) luap.pir --target=pir gl.lua > gl.pir
#IF(has_opengl):	$(CP) ../../gl.pir gl.pir
#IF(has_opengl):
#IF(has_opengl):gl.pbc: gl.pir
#IF(has_opengl):	-$(PARROT) --output=gl.pbc gl.pir
#IF(has_opengl):
#IF(has_opengl):gl_binding.pbc: gl_binding.pir
#IF(has_opengl):	-$(PARROT) --output=gl_binding.pbc gl_binding.pir
#IF(has_opengl):
#IF(has_opengl):glut.pbc: glut.pir
#IF(has_opengl):	-$(PARROT) --output=glut.pbc glut.pir

lfs.pbc: lfs.pir
	-$(PARROT) --output=lfs.pbc lfs.pir

lpeg.pbc: lpeg.pir
	-$(PARROT) --output=lpeg.pbc lpeg.pir

markdown.pbc: markdown.pir
	-$(PARROT) --output=markdown.pbc markdown.pir

mathx.pbc: mathx.pir
	-$(PARROT) --output=mathx.pbc mathx.pir

#IF(has_crypto):md5.pbc: md5.pir
#IF(has_crypto):	-$(PARROT) --output=md5.pbc md5.pir

random.pbc: random.pir
	-$(PARROT) --output=random.pbc random.pir

#IF(has_crypto):sha1.pbc: md5.pir
#IF(has_crypto):	$(PERL) -pe "s|md5|sha1|g; s|MD5|SHA1|g" md5.pir > sha1.pir
#IF(has_crypto):	-$(PARROT) --output=sha1.pbc sha1.pir

struct.pbc: struct.pir
	-$(PARROT) --output=struct.pbc struct.pir

uuid.pbc: uuid.pir
	-$(PARROT) --output=uuid.pbc uuid.pir

zlib.pbc: zlib.pir
	-$(PARROT) --output=zlib.pbc zlib.pir

install:
	-$(MKPATH) $(LIB_DIR)/languages/lua/library
	$(CP) *.pbc $(LIB_DIR)/languages/lua/library

uninstall:
	$(RM_RF) $(LIB_DIR)/languages/lua/library

Makefile: Makefile.in
	cd ../.. && $(PARROT) Configure.pir

clean:
	$(RM_F) *.pbc $(GEN_PIR)

realclean:
	$(RM_F) *.pbc $(GEN_PIR) Makefile

distclean: realclean

# Local variables:
#   mode: makefile
# End:
# vim: ft=make:

